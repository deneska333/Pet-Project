openapi: 3.0.0
info:
  title: Tasks API
  version: 1.0.0
  description: API для управления задачами пользователей.

tags: 
  - name: Tasks
    description: Операции с задачами

paths:
  /tasks:
    get:
      tags: [Tasks] 
      summary: Получить список всех задач
      description: Возвращает массив всех задач. В реальном приложении здесь, вероятно, нужна будет фильтрация (например, по user_id) и пагинация.
      operationId: GetTasks
      responses:
        '200':
          description: Успешный ответ со списком задач
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task' 
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags: [Tasks] 
      summary: Создать новую задачу
      description: Создает новую задачу для указанного пользователя.
      operationId: PostTasks
      requestBody:
        description: Данные для новой задачи
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate' 
      responses:
        '201':
          description: Задача успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task' 
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tasks/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64 
        description: Уникальный идентификатор задачи

    patch:
      tags: [Tasks] 
      summary: Обновить существующую задачу
      description: Обновляет поля существующей задачи по её ID. Позволяет частичное обновление.
      operationId: PatchTasksId
      requestBody:
        description: Поля задачи для обновления
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate' 
      responses:
        '200':
          description: Задача успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task' 
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags: [Tasks] 
      summary: Удалить задачу
      description: Удаляет задачу по её уникальному идентификатору.
      operationId: DeleteTasksId
      responses:
        '204':
          description: Задача успешно удалена (нет содержимого в ответе)
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'


components:
  schemas:
   
    Task:
      description: Представление задачи
      type: object
      properties:
        id:
          description: Уникальный идентификатор задачи
          type: integer
          format: int64
          readOnly: true 
        task:
          description: Текст задачи
          type: string
        is_done:
          description: Статус выполнения задачи
          type: boolean
          default: false 
        user_id:
          description: Идентификатор пользователя, которому принадлежит задача
          type: integer
          format: int64
          
      required: 
        - id
        - task
        - is_done
        - user_id

    
    TaskCreate:
      description: Данные для создания новой задачи
      type: object
      properties:
        task: 
          description: Текст задачи
          type: string
        user_id:
          description: Идентификатор пользователя, которому будет принадлежать задача
          type: integer
          format: int64
        
      required: 
        - task
        - user_id

    
    TaskUpdate:
      description: Поля для обновления существующей задачи (позволяет частичное обновление)
      type: object
      properties:
        task:
          description: Новый текст задачи
          type: string
        is_done:
          description: Новый статус выполнения задачи
          type: boolean
      
      minProperties: 1

    
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      required:
        - code
        - message

  
  responses:
    NotFound:
      description: Запрашиваемый ресурс не найден.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: "Ресурс не найден"
    BadRequest:
      description: Некорректный запрос (например, отсутствуют обязательные поля, неверный формат данных).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: "Ошибка валидации: поле 'task' не может быть пустым"
    InternalServerError:
      description: Внутренняя ошибка сервера.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 500
            message: "Внутренняя ошибка сервера"


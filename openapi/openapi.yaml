openapi: 3.0.0
info:
  title: Tasks API
  version: 1.0.0
paths:
  /tasks:
    get:
      summary: Get all tasks
      operationId: GetTasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      operationId: PostTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTasksJSONRequestBody'
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTasks201JSONResponse'
  /tasks/{id}:
    patch:
      summary: Update a task
      operationId: PatchTasksId
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchTasksIdJSONRequestBody'
      responses:
        '200':
          description: Task updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchTasksId200JSONResponse'
        '404':
          description: Task not found
    delete:
      summary: Delete a task
      operationId: DeleteTasksId
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Task deleted
        '404':
          description: Task not found

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
        task:
          type: string
        is_done:
          type: boolean
        user_id:           # обязательное поле для всех операций с задачами
          type: integer
          format: int64
      required:
        - task
        - user_id  # Указываем, что поле user_id обязательное
    TaskUpdate:
      type: object
      properties:
        task:
          type: string
        is_done:
          type: boolean
      required:
        - task  # Делаем task обязательным при обновлении
    PostTasksJSONRequestBody:
      allOf:
        - $ref: '#/components/schemas/Task'
    PatchTasksIdJSONRequestBody:
      allOf:
        - $ref: '#/components/schemas/TaskUpdate'
    PostTasks201JSONResponse:
      allOf:
        - $ref: '#/components/schemas/Task'
    PatchTasksId200JSONResponse:
      allOf:
        - $ref: '#/components/schemas/Task'
